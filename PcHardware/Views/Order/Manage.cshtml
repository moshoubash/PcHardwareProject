@using PcHardware.Services;
@inject MyDbContext dbContext;
@model List<PcHardware.Models.Order>
@{
    ViewData["Title"] = "Manage";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h1>Manage</h1>

<table class="table table-striped">
    <thead class="bg-primary">
        <tr>
            <th>ID</th>
            <th>NAME</th>
            <th>DATE</th>
            <th>TOTAL AMOUNT</th>
            <th>DISCOUNT</th>
            <th>STATUS</th>
            <th>USER EMAIL</th>
            <th>PHONE NUMBER</th>
            <th>LOCATION</th>
            <th>ACTIONS</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var o in Model)
            {
                var userOrder = dbContext.Users.Where(u => u.Id == o.UserId).FirstOrDefault();
                var addressOrder = dbContext.Addresses.Where(a => a.Id == o.AddressId).FirstOrDefault();
                var discount = dbContext.Discounts.FirstOrDefault(d => d.Id == o.DiscountId);
                <tr>
                    <td>@o.Id</td>
                    <td>@userOrder.FirstName @userOrder.LastName</td>
                    <td>@o.OrderDate.ToString("MM/dd/yyyy")</td>
                    <td>$@o.TotalAmount</td>
                    <td>@discount.Name</td>
                    <td>
                        @{
                            if (@o.Status == "Pending")
                            {
                                <span class="badge bg-primary">Pending</span>
                            }

                            if (@o.Status == "Processing")
                            {
                                <span class="badge bg-dark">Processing</span>
                            }

                            if (@o.Status == "Shipped")
                            {
                                <span class="badge bg-warning">Shipped</span>
                            }

                            if (@o.Status == "Delivered")
                            {
                                <span class="badge bg-success">Delivered</span>
                            }
                        }
                    </td>
                    <td>@userOrder.Email</td>
                    <td>@userOrder.PhoneNumber</td>
                    <td>@dbContext.Countries.Where(c => c.Id == int.Parse(addressOrder.Country)).FirstOrDefault().Name</td>
                    <td>
                        <a href="/Order/Details/@o.Id" class="btn btn-primary"><i class="fa-solid fa-circle-info"></i></a>
                        <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#editStatusModal"
                                data-order-id="@o.Id" data-order-status="@o.Status">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </button>
                        <a href="/Order/Delete/@o.Id" class="btn btn-danger"><i class="fa-solid fa-trash"></i></a>
                    </td>
                </tr>    
            }
        }
    </tbody>
</table>
<!--Edit Modal-->
<div class="modal fade" id="editStatusModal" tabindex="-1" aria-labelledby="editStatusLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="editStatusLabel">Edit Order Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="editStatusForm" method="post" action="/Order/EditStatus">
                    <input type="hidden" id="orderIdInput" name="OrderId" />
                    <div class="mb-3">
                        <label for="statusInput" class="form-label">Status</label>
                        <select id="statusInput" name="Status" class="form-select">
                            <option value="Pending">Pending</option>
                            <option value="Processing">Processing</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Delivered">Delivered</option>
                            <option value="Cancelled">Cancelled</option>
                        </select>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="editStatusForm" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>    
    document.addEventListener('DOMContentLoaded', function () {
        var editStatusModal = document.getElementById('editStatusModal');
        editStatusModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var orderId = button.getAttribute('data-order-id');
            var orderStatus = button.getAttribute('data-order-status');

            var orderIdInput = editStatusModal.querySelector('#orderIdInput');
            var statusInput = editStatusModal.querySelector('#statusInput');

            orderIdInput.value = orderId;
            statusInput.value = orderStatus;
        });
    });
</script>